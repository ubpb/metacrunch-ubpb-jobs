Bundler.require
require "pry-byebug"

options(require_args: false) do
  add :bulk_size, "-b", "Bulk Size", Integer, default: 5000
end

# ssh -L 1521:localhost:1521 your_oracle_box
s_connection = Sequel.oracle("aleph22", user: "padview", password: "v22lookylooky", host: "localhost", port: 1521)
d_connection = Sequel.mysql2("mabdemo", user: "root", password: "", host: "localhost")


# Make sure the destination database table exists
d_connection.create_table?(:data) do
  String :id, primary_key: true
  longtext :data
  DateTime :changed_at, index: true
end


# Read all records from Aleph z00p table
#timestamp = (Time.now - 5.month).strftime("%Y%m%d%H%M%S")
source Metacrunch::Db::Reader.new(
  # Connection
  s_connection,

  # Select relevant data
  ->(db) {
    #db["select * from pad50.z00p p where p.z00p_timestamp >= ?", timestamp].order("pad50.z00p.z00p_timestamp")
    db["select * from pad50.z00p"].order("pad50.z00p.z00p_rec_key")
  },

  # Options
  rows_per_fetch: options[:bulk_size]
)


# Extract the data we want from Aleph
i = 0
transformation do |data|
  i = i+1
  p "#{i} => #{data[:z00p_doc_number]}"

  {
    id: data[:z00p_doc_number],
    data: data[:z00p_str] || data[:z00p_ptr],
    changed_at: Time.parse(data[:z00p_timestamp])
  }
end

# Use a buffer to allow batch inserts into destination db
transformation_buffer(options[:bulk_size])


# Write to destination
destination Metacrunch::Db::Writer.new(
  # Connection
  d_connection,

  # Select the dataset we write to
  ->(db) {
    db[:data]
  },

  # Options
  #use_upsert: true,
  #id_key: :id
)
